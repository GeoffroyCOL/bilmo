# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false

    App\DataPersister\CustomerDataPersister: ~
    App\DataPersister\CommandDataPersister: ~

    App\Listener\CommandListener:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'postPersist', entity: 'App\Entity\Command', lazy: true }

    App\Listener\LoginListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }

    App\Listener\LineCommandListener:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'preRemove', entity: 'App\Entity\LineCommand', lazy: true }

    App\Listener\BuyerListener:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'preRemove', entity: 'App\Entity\Buyer', lazy: true }

    'App\Serializer\BuyerContextBuilder':
        decorates: 'api_platform.serializer.context_builder'
        arguments: [ '@App\Serializer\BuyerContextBuilder.inner' ]
        autoconfigure: false

    'App\Serializer\commandContextBuilder':
        decorates: 'api_platform.serializer.context_builder'
        arguments: [ '@App\Serializer\commandContextBuilder.inner' ]
        autoconfigure: false